{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-yilia/source/js/pc.js","path":"js/pc.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/js/mobile.js","path":"js/mobile.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/js/main.js","path":"js/main.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/js/instagram.js","path":"js/instagram.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/weibo.png","path":"img/weibo.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/twitter.png","path":"img/twitter.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/rss.png","path":"img/rss.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/mail.png","path":"img/mail.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/img-err.png","path":"img/img-err.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/google.png","path":"img/google.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/github.png","path":"img/github.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/facebook.png","path":"img/facebook.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/douban.png","path":"img/douban.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/delicious.png","path":"img/delicious.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/hexo-theme-yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/hexo-theme-yilia/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0}],"Cache":[{"_id":"source/_posts/Git使用记录.md","shasum":"ee5139f5d464484008f328694718f85ef4e8a17d","modified":1439177277945},{"_id":"source/_posts/SqlMap命令-全.md","shasum":"ab811b8954ebdff2f65e72aa63573b37c309f60a","modified":1439178607817},{"_id":"source/_posts/loadrunner问题记录.md","shasum":"e9853badbb4587b94e5436ec546a48c6c15e4d95","modified":1439186064405},{"_id":"source/_posts/mysql使用记录总结.md","shasum":"66795822565b592fc746e9f35c545b04ddb7a1dd","modified":1439177278566},{"_id":"source/_posts/ubuntu下python-django环境搭建.md","shasum":"87e877add4ad18ae73763d1e7ffc806c196326d5","modified":1439183394853},{"_id":"source/_posts/反射型xss.md","shasum":"aeb9c4d78eb6fbaf9d5667b099b0b84d00528806","modified":1439197638892},{"_id":"source/_posts/密码找回漏洞总结.md","shasum":"60bb72f918959557f951665724807775dc96be25","modified":1439177277124},{"_id":"themes/hexo-theme-yilia/README.md","shasum":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1439196891190},{"_id":"themes/hexo-theme-yilia/_config.yml","shasum":"076d2a103b0c2a0d69094c43e54dc9dde69cc690","modified":1439197148698},{"_id":"themes/hexo-theme-yilia/layout/_partial/after-footer.ejs","shasum":"3709af4e8f7e1196dbd1f9dea62fa440d4b47836","modified":1439196891192},{"_id":"themes/hexo-theme-yilia/layout/_partial/archive-post.ejs","shasum":"5b29a383418cfdcf8d5c5719b4fc4608aaba6fe7","modified":1439196891192},{"_id":"themes/hexo-theme-yilia/layout/_partial/archive.ejs","shasum":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1439196891204},{"_id":"themes/hexo-theme-yilia/layout/_partial/article.ejs","shasum":"d72862359b9533822da9c709772148fe6a89476f","modified":1439197393913},{"_id":"themes/hexo-theme-yilia/layout/_partial/footer.ejs","shasum":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1439196891204},{"_id":"themes/hexo-theme-yilia/layout/_partial/google-analytics.ejs","shasum":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1439196891205},{"_id":"themes/hexo-theme-yilia/layout/_partial/head.ejs","shasum":"a811c37dc5450cb645265884954ab3598ffcb308","modified":1439196891205},{"_id":"themes/hexo-theme-yilia/layout/_partial/header.ejs","shasum":"b69855e07b65117769adc515cb64b803932068c9","modified":1439196891205},{"_id":"themes/hexo-theme-yilia/layout/_partial/left-col.ejs","shasum":"a01a4f9d738236a5340926e4c33cd333e34d548a","modified":1439196891206},{"_id":"themes/hexo-theme-yilia/layout/_partial/mathjax.ejs","shasum":"7be03a92dabeb2f94bf0e731d12a1c1146d736dd","modified":1439196891206},{"_id":"themes/hexo-theme-yilia/layout/_partial/mobile-nav.ejs","shasum":"998e065e0ea49852281684fa6e2629780053abec","modified":1439196891207},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/category.ejs","shasum":"27fab3e6ccc41c075dc4c5ba3ca9e7f3b6247945","modified":1439196891207},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/date.ejs","shasum":"06d8914b5aef73b5ec2cabb0105e275ff821b321","modified":1439196891207},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/duoshuo.ejs","shasum":"f8cd1a5ddb0bd7e9a23c6a699ca7cfd678310025","modified":1439197311820},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/nav.ejs","shasum":"c115c282eebfb6b18612d2d8733272c270b03066","modified":1439196891208},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/share.ejs","shasum":"e032a0417c931de2a626cd06c797206a823014a6","modified":1439196891208},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/tag.ejs","shasum":"acf1b9d79ccec172881f9f0080e96667f4178885","modified":1439196891209},{"_id":"themes/hexo-theme-yilia/layout/_partial/post/title.ejs","shasum":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1439196891209},{"_id":"themes/hexo-theme-yilia/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1439196891210},{"_id":"themes/hexo-theme-yilia/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1439196891210},{"_id":"themes/hexo-theme-yilia/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1439196891210},{"_id":"themes/hexo-theme-yilia/layout/layout.ejs","shasum":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1439196891211},{"_id":"themes/hexo-theme-yilia/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1439196891211},{"_id":"themes/hexo-theme-yilia/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1439196891212},{"_id":"themes/hexo-theme-yilia/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1439196891212},{"_id":"themes/hexo-theme-yilia/package.json","shasum":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1439196891214},{"_id":"themes/hexo-theme-yilia/source/css/_extend.styl","shasum":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1439196891215},{"_id":"themes/hexo-theme-yilia/source/css/_partial/archive.styl","shasum":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1439196891216},{"_id":"themes/hexo-theme-yilia/source/css/_partial/article.styl","shasum":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1439196891216},{"_id":"themes/hexo-theme-yilia/source/css/_partial/footer.styl","shasum":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1439196891216},{"_id":"themes/hexo-theme-yilia/source/css/_partial/header.styl","shasum":"67e59feb18eee6026717cb440d86ab9551782628","modified":1439196891217},{"_id":"themes/hexo-theme-yilia/source/css/_partial/highlight.styl","shasum":"8cadf8437ce6f372802d3d28617a1ab97e7c818e","modified":1439196891218},{"_id":"themes/hexo-theme-yilia/source/css/_partial/instagram.styl","shasum":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1439196891218},{"_id":"themes/hexo-theme-yilia/source/css/_partial/main.styl","shasum":"4268f759920106a576c6037264076b36018ff73b","modified":1439196891219},{"_id":"themes/hexo-theme-yilia/source/css/_partial/mobile-slider.styl","shasum":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1439196891219},{"_id":"themes/hexo-theme-yilia/source/css/_partial/mobile.styl","shasum":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1439196891219},{"_id":"themes/hexo-theme-yilia/source/css/_partial/page.styl","shasum":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1439196891220},{"_id":"themes/hexo-theme-yilia/source/css/_partial/scroll.styl","shasum":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1439196891220},{"_id":"themes/hexo-theme-yilia/source/css/_partial/share.styl","shasum":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1439196891220},{"_id":"themes/hexo-theme-yilia/source/css/_partial/tagcloud.styl","shasum":"af0115de5c6455f899a2e09225b50224982c039d","modified":1439196891221},{"_id":"themes/hexo-theme-yilia/source/css/_partial/wheelmenu.styl","shasum":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1439196891221},{"_id":"themes/hexo-theme-yilia/source/css/_util/grid.styl","shasum":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1439196891222},{"_id":"themes/hexo-theme-yilia/source/css/_util/mixin.styl","shasum":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1439196891222},{"_id":"themes/hexo-theme-yilia/source/css/_variables.styl","shasum":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1439196891223},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.eot","shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1439196891224},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.svgz","shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1439196891227},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.ttf","shasum":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1439196891228},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.woff","shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1439196891228},{"_id":"themes/hexo-theme-yilia/source/css/style.styl","shasum":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1439196891229},{"_id":"themes/hexo-theme-yilia/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1439196891229},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1439196891229},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1439196891230},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1439196891231},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1439196891231},{"_id":"themes/hexo-theme-yilia/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1439196891231},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1439196891232},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"6394c48092085788a8c0ef72670b0652006231a1","modified":1439196891232},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1439196891233},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1439196891233},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1439196891233},{"_id":"themes/hexo-theme-yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1439196891234},{"_id":"themes/hexo-theme-yilia/source/fancybox/jquery.fancybox.css","shasum":"96138eaddfbd305160ddcb98a5f08555ca6cb4ee","modified":1439196891234},{"_id":"themes/hexo-theme-yilia/source/fancybox/jquery.fancybox.js","shasum":"004bb0812414554ab48067792f09e978603253b6","modified":1439196891235},{"_id":"themes/hexo-theme-yilia/source/fancybox/jquery.fancybox.pack.js","shasum":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1439196891236},{"_id":"themes/hexo-theme-yilia/source/img/coderwall.png","shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1439196891237},{"_id":"themes/hexo-theme-yilia/source/img/delicious.png","shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1439196891237},{"_id":"themes/hexo-theme-yilia/source/img/douban.png","shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1439196891237},{"_id":"themes/hexo-theme-yilia/source/img/facebook.png","shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1439196891238},{"_id":"themes/hexo-theme-yilia/source/img/github.png","shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1439196891239},{"_id":"themes/hexo-theme-yilia/source/img/google.png","shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1439196891239},{"_id":"themes/hexo-theme-yilia/source/img/img-err.png","shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1439196891239},{"_id":"themes/hexo-theme-yilia/source/img/img-loading.png","shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1439196891240},{"_id":"themes/hexo-theme-yilia/source/img/linkedin.png","shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1439196891240},{"_id":"themes/hexo-theme-yilia/source/img/mail.png","shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1439196891240},{"_id":"themes/hexo-theme-yilia/source/img/pinboard.png","shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1439196891241},{"_id":"themes/hexo-theme-yilia/source/img/pinterest.png","shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1439196891241},{"_id":"themes/hexo-theme-yilia/source/img/rss.png","shasum":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1439196891241},{"_id":"themes/hexo-theme-yilia/source/img/scrollbar_arrow.png","shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1439196891242},{"_id":"themes/hexo-theme-yilia/source/img/stackoverflow.png","shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1439196891242},{"_id":"themes/hexo-theme-yilia/source/img/twitter.png","shasum":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1439196891242},{"_id":"themes/hexo-theme-yilia/source/img/weibo.png","shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1439196891242},{"_id":"themes/hexo-theme-yilia/source/img/zhihu.png","shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1439196891243},{"_id":"themes/hexo-theme-yilia/source/js/instagram.js","shasum":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1439196891243},{"_id":"themes/hexo-theme-yilia/source/js/jquery.lazyload.js","shasum":"9c34c37b4dca82386648d364da913153d1db902e","modified":1439196891244},{"_id":"themes/hexo-theme-yilia/source/js/main.js","shasum":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1439196891245},{"_id":"themes/hexo-theme-yilia/source/js/mobile.js","shasum":"387c047e661f04fbb5f5bfc4b2db617023e836ce","modified":1439196891245},{"_id":"themes/hexo-theme-yilia/source/js/pc.js","shasum":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1439196891245},{"_id":"themes/hexo-theme-yilia/source/css/fonts/fontawesome-webfont.svg","shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1439196891226},{"_id":"public/js/pc.js","modified":1439199455288,"shasum":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10"},{"_id":"public/js/mobile.js","modified":1439199455294,"shasum":"b68cc01d24e80973c48205f551da87f3f3427644"},{"_id":"public/js/main.js","modified":1439199455298,"shasum":"0640b68a76fab3c693b3cd1e4d04d14be1e53940"},{"_id":"public/js/jquery.lazyload.js","modified":1439199455301,"shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799"},{"_id":"public/js/instagram.js","modified":1439199455304,"shasum":"f19adbcc0dac33536bc6660598059048ec901882"},{"_id":"public/img/zhihu.png","modified":1439199455311,"shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d"},{"_id":"public/img/weibo.png","modified":1439199455316,"shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b"},{"_id":"public/img/twitter.png","modified":1439199455320,"shasum":"14dbb8e62d056525253bc0de13acd1723da7a934"},{"_id":"public/img/stackoverflow.png","modified":1439199455327,"shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2"},{"_id":"public/img/scrollbar_arrow.png","modified":1439199455331,"shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0"},{"_id":"public/img/rss.png","modified":1439199455335,"shasum":"430fd47340e75214c081abd05cd7410cf7c71b86"},{"_id":"public/img/pinterest.png","modified":1439199455344,"shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630"},{"_id":"public/img/pinboard.png","modified":1439199455348,"shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0"},{"_id":"public/img/mail.png","modified":1439199455352,"shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7"},{"_id":"public/img/linkedin.png","modified":1439199455357,"shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c"},{"_id":"public/img/img-loading.png","modified":1439199455363,"shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031"},{"_id":"public/img/img-err.png","modified":1439199455367,"shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b"},{"_id":"public/img/google.png","modified":1439199455373,"shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d"},{"_id":"public/img/github.png","modified":1439199455378,"shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d"},{"_id":"public/img/facebook.png","modified":1439199455381,"shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54"},{"_id":"public/img/douban.png","modified":1439199455385,"shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e"},{"_id":"public/img/delicious.png","modified":1439199455389,"shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd"},{"_id":"public/img/coderwall.png","modified":1439199455393,"shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1439199455398,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1439199455401,"shasum":"a82597493d75ea989ca586e09173cff332efe41e"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1439199455407,"shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1439199455411,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1439199455414,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1439199455417,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1439199455421,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1439199455424,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1439199455429,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1439199455435,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1439199455441,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1439199455453,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1439199455457,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1439199455461,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1439199455465,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1439199456905,"shasum":"e56554c624d9d49e9429eeeb9222488f8df634ec"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1439199457313,"shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1439199457317,"shasum":"1480b8101b02da9bc4c60341b5e185e63e585064"},{"_id":"public/css/fonts/fontawesome-webfont.svgz","modified":1439199457322,"shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1439199457327,"shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1439199457335,"shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6"},{"_id":"public/2015/08/10/test/index.html","modified":1439200145246,"shasum":"4092f531b5f71608ff9a758e0e7f5c53f09daea2"},{"_id":"public/2015/08/10/loadrunner问题记录/index.html","modified":1439200211255,"shasum":"89b54ef7755948b3719ac27899716cfb3adc4fcb"},{"_id":"public/2015/08/10/ubuntu下python-django环境搭建/index.html","modified":1439199457441,"shasum":"a7ac090446ee1e8fa0e770466e9a92be2e57f677"},{"_id":"public/2015/08/10/SqlMap命令-全/index.html","modified":1439199457461,"shasum":"3845e47c893e26f601eaa72d239e5a743a3baa15"},{"_id":"public/2015/08/10/Git使用记录/index.html","modified":1439199457473,"shasum":"ea7af546b7c641887c12e8853e68b9285e1f4147"},{"_id":"public/2015/08/10/反射型xss/index.html","modified":1439199457487,"shasum":"3756bc81423dcc3007ff1d2e90e9f96c1ff9e9d5"},{"_id":"public/2015/08/07/mysql使用记录总结/index.html","modified":1439199457503,"shasum":"b9d0237629e18ea4fd0702c6edede9e06617bf71"},{"_id":"public/2015/08/07/密码找回漏洞总结/index.html","modified":1439199457516,"shasum":"d665aff3bdf59408c4da970a9df42915b409f9f0"},{"_id":"public/archives/index.html","modified":1439200211401,"shasum":"46f22bc7fcb16349c24fc719fd6ec195305c8b18"},{"_id":"public/archives/2015/index.html","modified":1439200211428,"shasum":"c890ae2ff1d8c42e279b8d53c24f9c062301373a"},{"_id":"public/archives/2015/08/index.html","modified":1439200211454,"shasum":"e844bd01fe8aa5e0b3af4e9cfbd4764bdd947e1f"},{"_id":"public/index.html","modified":1439200211494,"shasum":"a8996a6012da5330b54aeb79cc85e8f904e9e825"},{"_id":"public/tags/Git/index.html","modified":1439199457658,"shasum":"bc596d59b28cc64d072cc9701302870811afc752"},{"_id":"public/tags/findpassword/index.html","modified":1439199457667,"shasum":"ba37de2e48802a7b7f3e3efc361c2d0d5bbffead"},{"_id":"public/tags/XSS/index.html","modified":1439199457682,"shasum":"11e39f08e23b49d5dcc60e2fa50ec410afa20f1d"},{"_id":"public/tags/django/index.html","modified":1439199457693,"shasum":"a32d4155036671f23d59c6ba3b221fbffd473786"},{"_id":"public/tags/mysql/index.html","modified":1439199457704,"shasum":"4d5d810e601575748ff67734542c6685fe9be445"},{"_id":"public/tags/LoadRuner/index.html","modified":1439199457715,"shasum":"1aa4679e51f255a622107fda2112e8d86ba0b062"},{"_id":"public/tags/SQLMAP/index.html","modified":1439199457726,"shasum":"bb05d074f210641c8e0c5236cd7ef0659cd06fa3"},{"_id":"public/pic/p1.jpg","modified":1439199621282,"shasum":"55a0ea3e2b9174e82f48f4d9ea0703d9f436b615"}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Git使用记录","date":"2015-08-10T03:20:24.000Z","_content":"\n##授权\n生成密钥和公钥\n\n    ssh-keygen -t rsa -C \"yourmail@g.com\"\n\n注：\t\n\n    ssh-keygen在git的安装目录的\"bin\"目录下。\n\twindows下填写路径是填写绝对路径，公钥密钥放在git安装      \n\t目录下的\".ssh\"文件夹中。例如D:\\Git\\.ssh\\id_rsa     \n\t此时会创建D:\\Git\\.ssh文件夹并在其中生成名为id_rsa的一对密钥。\n\t其中将公钥添加到github.com网站中就可以通过命令行对其进行各种操作。\n\n##登录github.com添加远程仓库。\n\n使用免费的只能选择public模式，添加title和description。完成并记录git clone url（形如：git@github.com\\username\\projectname）\n\n    git remote add origin git@github.com:fengge98\\test.git\n创建一个名为origin的远程库关联到账户fengge98下名为test.git的工程\n\n    git push -u origin master\n第一次由于远程仓库没有内容使用-u参数，将当前分支master中commit后的内容推送到origin远程库，并将远程库master和当前master关联方便以后的推送和拉取\n\n\n##本地编写代码\n\n    git branch asdf\n    git checkout adsf       #创建名为asdf的分支 并切换到asd\n    git checkout -b asdf    #创建名为asdf的分支 并切换到asd\n    git add test1.py\n    git add test2.py\n    ...\n    git commit -m \"description\"\n    add并commit\t\t\t\t#其中description部分填写当前版本的改动 \n    git checkout master  \t#切换到主分支\n    git merge asdf   \t\t#将adsf提交的改动合并到master分支\n    git push   \t\t\t\t#将当前版本代码推送到远程库\n\n\n\n\n\n","source":"_posts/Git使用记录.md","raw":"title: Git使用记录\ndate: 2015-08-10 11:20:24\ntags: [Git]\n---\n\n##授权\n生成密钥和公钥\n\n    ssh-keygen -t rsa -C \"yourmail@g.com\"\n\n注：\t\n\n    ssh-keygen在git的安装目录的\"bin\"目录下。\n\twindows下填写路径是填写绝对路径，公钥密钥放在git安装      \n\t目录下的\".ssh\"文件夹中。例如D:\\Git\\.ssh\\id_rsa     \n\t此时会创建D:\\Git\\.ssh文件夹并在其中生成名为id_rsa的一对密钥。\n\t其中将公钥添加到github.com网站中就可以通过命令行对其进行各种操作。\n\n##登录github.com添加远程仓库。\n\n使用免费的只能选择public模式，添加title和description。完成并记录git clone url（形如：git@github.com\\username\\projectname）\n\n    git remote add origin git@github.com:fengge98\\test.git\n创建一个名为origin的远程库关联到账户fengge98下名为test.git的工程\n\n    git push -u origin master\n第一次由于远程仓库没有内容使用-u参数，将当前分支master中commit后的内容推送到origin远程库，并将远程库master和当前master关联方便以后的推送和拉取\n\n\n##本地编写代码\n\n    git branch asdf\n    git checkout adsf       #创建名为asdf的分支 并切换到asd\n    git checkout -b asdf    #创建名为asdf的分支 并切换到asd\n    git add test1.py\n    git add test2.py\n    ...\n    git commit -m \"description\"\n    add并commit\t\t\t\t#其中description部分填写当前版本的改动 \n    git checkout master  \t#切换到主分支\n    git merge asdf   \t\t#将adsf提交的改动合并到master分支\n    git push   \t\t\t\t#将当前版本代码推送到远程库\n\n\n\n\n\n","slug":"Git使用记录","published":1,"updated":"2015-08-10T03:27:57.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71h200009wqyy9p2n1dn"},{"title":"密码找回漏洞总结","date":"2015-08-07T08:58:06.000Z","_content":"概述\n==\n\t大部分是乌云知识库中的内容，已经总结的很好了，再按照自己的思路过一遍。\n\n1.伪造请求（未注册的情况下）\n----------\n\t在请求密码修改的过程中，修改账号的手机或邮箱等联系方式，在接受到验证码后进行密码修改。\n[OPPO修改任意帐号密码-2](http://www.wooyun.org/bugs/wooyun-2013-020425)\n[OPPO修改任意帐号密码-3](http://www.wooyun.org/bugs/wooyun-2013-020532)\n修改了接受密码手机，并且通过对账户类型的修改绕过边界。\n\n2.使用正常账户请求修改获取token\n----------\n\n\t 1. 爆破（绕过次数验证）\n [当当网任意用户密码修改漏洞](http://www.wooyun.org/bugs/wooyun-2012-011833)\n 原因：验证码过于简单，并且没有对请求修改次数做出限制。\n [微信任意用户密码修改漏洞](http://www.wooyun.org/bugs/wooyun-2012-011720)\n 原因：虽然设置了请求阀值，但被猜解除了验证方式，病找到了绕过方式，验证码为4-5位的数字容易爆破\n \n\t 2. 猜解\n [奇虎360任意密码修改](http://www.wooyun.org/bugs/wooyun-2012-08333)\n 原因：使用了特定值的加密作为token，被猜解到使用了时间戳的MD5值。在实际过程中我们也可以尝试用户名，手机，邮箱，等等的不同加密方式。\n \n\t 3. 在客户端寻找token信息\n [走秀网秀团任意密码修改缺陷](http://www.wooyun.org/bugs/wooyun-2012-05630)\n 原因：没有严格控制token，在返回的url中发现token信息\n[ sohu邮箱任意用户密码重置](http://www.wooyun.org/bugs/wooyun-2012-04728)\n原因：找回密码问题的答案在页面源码中可以看到...... \n\n3.通过验证提交修改请求时存在的漏洞\n----------\n\n\t  在请求过程中修改用户uid\n [身份通任意密码修改-泄漏大量公民信息](http://www.wooyun.org/bugs/wooyun-2012-012572)\n [携程旅行网任意老板密码修改(庆在wooyun第100洞)](http://www.wooyun.org/bugs/wooyun-2013-018263)\n 原因：没有管理好token和用户间一对一的关系，导致在最后提交请求的过程中修改了uid导致任意用户密码重置。\n\n4.边界绕过特殊案例\n----------\n[网易邮箱可直接修改其用户密码](http://www.wooyun.org/bugs/wooyun-2012-08307) \n过程：注册过程的绑定手机页面用过参数修改，将任意账号绑定至可控手机，在通过密码找回流程找回\n\n\n\t以上资料均来自乌云知识库~","source":"_posts/密码找回漏洞总结.md","raw":"title: 密码找回漏洞总结\ndate: 2015-08-07 16:58:06\ntags: [findpassword]\n---\n概述\n==\n\t大部分是乌云知识库中的内容，已经总结的很好了，再按照自己的思路过一遍。\n\n1.伪造请求（未注册的情况下）\n----------\n\t在请求密码修改的过程中，修改账号的手机或邮箱等联系方式，在接受到验证码后进行密码修改。\n[OPPO修改任意帐号密码-2](http://www.wooyun.org/bugs/wooyun-2013-020425)\n[OPPO修改任意帐号密码-3](http://www.wooyun.org/bugs/wooyun-2013-020532)\n修改了接受密码手机，并且通过对账户类型的修改绕过边界。\n\n2.使用正常账户请求修改获取token\n----------\n\n\t 1. 爆破（绕过次数验证）\n [当当网任意用户密码修改漏洞](http://www.wooyun.org/bugs/wooyun-2012-011833)\n 原因：验证码过于简单，并且没有对请求修改次数做出限制。\n [微信任意用户密码修改漏洞](http://www.wooyun.org/bugs/wooyun-2012-011720)\n 原因：虽然设置了请求阀值，但被猜解除了验证方式，病找到了绕过方式，验证码为4-5位的数字容易爆破\n \n\t 2. 猜解\n [奇虎360任意密码修改](http://www.wooyun.org/bugs/wooyun-2012-08333)\n 原因：使用了特定值的加密作为token，被猜解到使用了时间戳的MD5值。在实际过程中我们也可以尝试用户名，手机，邮箱，等等的不同加密方式。\n \n\t 3. 在客户端寻找token信息\n [走秀网秀团任意密码修改缺陷](http://www.wooyun.org/bugs/wooyun-2012-05630)\n 原因：没有严格控制token，在返回的url中发现token信息\n[ sohu邮箱任意用户密码重置](http://www.wooyun.org/bugs/wooyun-2012-04728)\n原因：找回密码问题的答案在页面源码中可以看到...... \n\n3.通过验证提交修改请求时存在的漏洞\n----------\n\n\t  在请求过程中修改用户uid\n [身份通任意密码修改-泄漏大量公民信息](http://www.wooyun.org/bugs/wooyun-2012-012572)\n [携程旅行网任意老板密码修改(庆在wooyun第100洞)](http://www.wooyun.org/bugs/wooyun-2013-018263)\n 原因：没有管理好token和用户间一对一的关系，导致在最后提交请求的过程中修改了uid导致任意用户密码重置。\n\n4.边界绕过特殊案例\n----------\n[网易邮箱可直接修改其用户密码](http://www.wooyun.org/bugs/wooyun-2012-08307) \n过程：注册过程的绑定手机页面用过参数修改，将任意账号绑定至可控手机，在通过密码找回流程找回\n\n\n\t以上资料均来自乌云知识库~","slug":"密码找回漏洞总结","published":1,"updated":"2015-08-10T03:27:57.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71iw00039wqysduae7lr"},{"title":"反射型XSS(心伤的瘦子)","date":"2015-08-10T02:47:07.000Z","_content":"\n    1.查看`< / \"`等字符的过滤情况如果没有，直接X.\n\n[ 什么都没过滤的入门情况](http://www.wooyun.org/bugs/wooyun-2010-015957)\n\n    2.考虑用`&#x`的形式代替，如果没有过滤`& #` 理论上可以代替任意字符，但是一般都会将&过滤为`&amp`. \n\n[输出在`<script></script>`之间的情况](http://www.wooyun.org/bugs/wooyun-2010-015959)//这里构造的代码没懂\n[输出在HTML属性里的情况](http://www.wooyun.org/bugs/wooyun-2010-015963)\n\n\n    3.gbXXXX系列的可以考虑使用宽字符`%c0`杀掉双引号，可能是因为过滤的正则写的有问题.\n\n[宽字节复仇记 [QQ邮箱基本通用]](http://www.wooyun.org/bugs/wooyun-2010-015969)\n\n\n    4.`location.href=\".........\"+\"&ss=aaaa\\\"+\"&from==1;function from(){}//\"+\"&param=\";\n\n如上所示代码：\t\n1用\\来闭合双引号,//注视掉后面代码\n2将=改为==提高优先级\n3可是在解析时浏览器提示from未声明，浏览器会优先解析function XXX(){} 的JS函数，添加如上代码\n4发现空格被过滤掉了用/**/代替空格 \n[反斜线复仇记](http://www.wooyun.org/bugs/wooyun-2010-015979)\n\n    5.输出出现在注释中使用换行符`%0a` 来使之后的代码生效。\\.\n\n[换行符复仇记](http://www.wooyun.org/bugs/wooyun-2010-016003)\n\n     6.前面知识的综合应用\n\n```\nhttp://cgi.data.tech.qq.com/index.php?mod=search&type=data&site=digi&libid=2&curpage=1&pagenum=30&filterattr=138,138|16|4,5,4,5&filtervalue=3500-4000,%B4%F3%D3%DA4000|%D0%FD%D7%AA|WCDMA,WCDMA,HSDPA,HSDPA&tplname=centersearch.shtml&orderby=aaaa%c0%5c%0aalert(1);//\n```\n目标参数orderby\n\t\n\t1.使用换行符`%0a`使JS代码生效\n\t2.使用反斜线`%5c`解决语法错误，但是发现\\被过滤为\\\\\n\t3.使用宽字符`%c0`杀掉一个反斜线最终保留一个反斜线，成功构造如上代码\n\n以上资料来自[心伤的瘦子](http://www.wooyun.org/whitehats/%E5%BF%83%E4%BC%A4%E7%9A%84%E7%98%A6%E5%AD%90)@[乌云](http://www.wooyun.org)\n","source":"_posts/反射型xss.md","raw":"title: 反射型XSS(心伤的瘦子)\ndate: 2015-08-10 10:47:07\ntags: [XSS]\n---\n\n    1.查看`< / \"`等字符的过滤情况如果没有，直接X.\n\n[ 什么都没过滤的入门情况](http://www.wooyun.org/bugs/wooyun-2010-015957)\n\n    2.考虑用`&#x`的形式代替，如果没有过滤`& #` 理论上可以代替任意字符，但是一般都会将&过滤为`&amp`. \n\n[输出在`<script></script>`之间的情况](http://www.wooyun.org/bugs/wooyun-2010-015959)//这里构造的代码没懂\n[输出在HTML属性里的情况](http://www.wooyun.org/bugs/wooyun-2010-015963)\n\n\n    3.gbXXXX系列的可以考虑使用宽字符`%c0`杀掉双引号，可能是因为过滤的正则写的有问题.\n\n[宽字节复仇记 [QQ邮箱基本通用]](http://www.wooyun.org/bugs/wooyun-2010-015969)\n\n\n    4.`location.href=\".........\"+\"&ss=aaaa\\\"+\"&from==1;function from(){}//\"+\"&param=\";\n\n如上所示代码：\t\n1用\\来闭合双引号,//注视掉后面代码\n2将=改为==提高优先级\n3可是在解析时浏览器提示from未声明，浏览器会优先解析function XXX(){} 的JS函数，添加如上代码\n4发现空格被过滤掉了用/**/代替空格 \n[反斜线复仇记](http://www.wooyun.org/bugs/wooyun-2010-015979)\n\n    5.输出出现在注释中使用换行符`%0a` 来使之后的代码生效。\\.\n\n[换行符复仇记](http://www.wooyun.org/bugs/wooyun-2010-016003)\n\n     6.前面知识的综合应用\n\n```\nhttp://cgi.data.tech.qq.com/index.php?mod=search&type=data&site=digi&libid=2&curpage=1&pagenum=30&filterattr=138,138|16|4,5,4,5&filtervalue=3500-4000,%B4%F3%D3%DA4000|%D0%FD%D7%AA|WCDMA,WCDMA,HSDPA,HSDPA&tplname=centersearch.shtml&orderby=aaaa%c0%5c%0aalert(1);//\n```\n目标参数orderby\n\t\n\t1.使用换行符`%0a`使JS代码生效\n\t2.使用反斜线`%5c`解决语法错误，但是发现\\被过滤为\\\\\n\t3.使用宽字符`%c0`杀掉一个反斜线最终保留一个反斜线，成功构造如上代码\n\n以上资料来自[心伤的瘦子](http://www.wooyun.org/whitehats/%E5%BF%83%E4%BC%A4%E7%9A%84%E7%98%A6%E5%AD%90)@[乌云](http://www.wooyun.org)\n","slug":"反射型xss","published":1,"updated":"2015-08-10T09:07:18.892Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71j200069wqytszsrq21"},{"title":"ubuntu下python+django环境搭建","date":"2015-08-10T05:09:36.000Z","_content":"一，首先列出需要安装的东西：\n----------\n\n|名称|说明|命令|\n|---|---|---|\n|python2.7|这个安装就不用多说了linux都会自带的\n|easy_install|一个能安装python工具的命令|`sudo apt-get install python-setuptools`\n|pip|python包管理工具|`sudo easy install pip`\n|git|版本管理工具实现多人合作开发|`sudo apt-get install git`\n|django|项目开发框架（建议先不要安装在全局）|`sudo easy install django`\n|virtualenv|提供一个用于开发的模拟环境 |`sudo easy installvirtualenv`\n|sublime|编辑器                                     \n      到这里需要安装的东西就没有啦~\n\n\n 二，使用virtualenv建立虚拟开发环境\n----------\n转到开发目录（cd filename / 打开filename  cd ..  /后退   mkdir filename/ 创建名为filename的文件）用到的3基本个命令\n执行命令：virtualenvenv                   #创建名为env的环境\n执行命令：source env/bin/activate   #进入env环境    这时命令行前面会有（env）这个标志\n执行命令：pipfreeze                          #查看当前env目录下安装包的情况 正常情况下是什么都没有 或是默认安装几个重要包\n执行命令：pip install django            #安装djangodjango框架安装在env环境中 \n再次执行：pip freeze                          #会发现多了一个django\n三，使用django创建一个工程\n----------\n\n\n执行命令：django-admin.py startproject mysite #创建一个名为mysite的django工程\n进入mysite目录：cd mysite\n执行命令：python manage.py runserver\n在浏览器地址栏输入：http://127.0.0.1:8000/      #会发现它已经在工作了","source":"_posts/ubuntu下python-django环境搭建.md","raw":"title: ubuntu下python+django环境搭建\ndate: 2015-08-10 13:09:36\ntags: [django]\n---\n一，首先列出需要安装的东西：\n----------\n\n|名称|说明|命令|\n|---|---|---|\n|python2.7|这个安装就不用多说了linux都会自带的\n|easy_install|一个能安装python工具的命令|`sudo apt-get install python-setuptools`\n|pip|python包管理工具|`sudo easy install pip`\n|git|版本管理工具实现多人合作开发|`sudo apt-get install git`\n|django|项目开发框架（建议先不要安装在全局）|`sudo easy install django`\n|virtualenv|提供一个用于开发的模拟环境 |`sudo easy installvirtualenv`\n|sublime|编辑器                                     \n      到这里需要安装的东西就没有啦~\n\n\n 二，使用virtualenv建立虚拟开发环境\n----------\n转到开发目录（cd filename / 打开filename  cd ..  /后退   mkdir filename/ 创建名为filename的文件）用到的3基本个命令\n执行命令：virtualenvenv                   #创建名为env的环境\n执行命令：source env/bin/activate   #进入env环境    这时命令行前面会有（env）这个标志\n执行命令：pipfreeze                          #查看当前env目录下安装包的情况 正常情况下是什么都没有 或是默认安装几个重要包\n执行命令：pip install django            #安装djangodjango框架安装在env环境中 \n再次执行：pip freeze                          #会发现多了一个django\n三，使用django创建一个工程\n----------\n\n\n执行命令：django-admin.py startproject mysite #创建一个名为mysite的django工程\n进入mysite目录：cd mysite\n执行命令：python manage.py runserver\n在浏览器地址栏输入：http://127.0.0.1:8000/      #会发现它已经在工作了","slug":"ubuntu下python-django环境搭建","published":1,"updated":"2015-08-10T05:09:54.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71j500099wqy3pt4ndf9"},{"title":"MySql用户及字符集操作","date":"2015-08-07T09:47:50.000Z","_content":"MySql中添加用户,新建数据库,用户授权,删除用户,修改密码(注意每行后边都跟个;表示一个命令语句结束):\n\n1.新建用户\n----------\n登录MYSQL：\n\n    cmd>mysql -u root -p\n    cmd>密码\n创建用户：\n\n    mysql> insert into mysql.user(Host,User,Password) values(\"localhost\",\"test\",password(\"1234\"));\n这样就创建了一个名为：test 密码为：1234 的用户。\n注意：此处的\"localhost\"，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将\"localhost\"改为\"%\"，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。\n然后登录一下：\n    \n    mysql>exit;\n    cmd>mysql -u test -p\n    cmd>输入密码\n    mysql>登录成功\n\n2.为用户授权\n----------\n授权格式：\n\n    grant 权限 on 数据库.* to 用户名@登录主机 identified by \"密码\";　\n登录MYSQL（有ROOT权限），这里以ROOT身份登录：\n\n    cmd>mysql -u root -p\n    cmd>密码\n\n首先为用户创建一个数据库(testDB)：\n\n    mysql>create database testDB;\n\n授权test用户拥有testDB数据库的所有权限（某个数据库的所有权限）：\n\n\tmysql>grant all privileges on testDB.* to test@localhost identified by '1234';\n\tmysql>flush privileges;  刷新系统权限表\n    格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by \"密码\";　\n\n如果想指定部分权限给一用户，可以这样来写:\n\n    mysql>grant select,update on testDB.* to test@localhost identified by '1234';\n　　mysql>flush privileges; 刷新系统权限表\n\n授权test用户拥有所有数据库的某些权限： \n\n    mysql>grant select,delete,update,create,drop on *.* to test@\"%\" identified by \"1234\";\n    //test用户对所有数据库都有select,delete,update,create,drop 权限。\n    //@\"%\" 表示对所有非本地主机授权，不包括localhost。（localhost地址设为127.0.0.1，如果设为真实的本地地址，不知道是否可以，没有验证。）\n//对localhost授权：加上一句\n\n    grant all privileges on testDB.* to test@localhost identified by '1234';即可。\n\n3.删除用户\n----------\n\n    cmd>mysql -u root -p\n    cmd>密码\n    mysql>Delete FROM user Where User='test' and Host='localhost';\n    mysql>flush privileges;\n    mysql>drop database testDB; //删除用户的数据库\n\n删除账户及权限：\n\n    >drop user 用户名@'%';\n    >drop user 用户名@ localhost; \n\n4.修改指定用户密码\n----------\n    cmd>mysql -u root -p\n    cmd>密码\n    mysql>update mysql.user set password=password('新密码') where User=\"test\" and Host=\"localhost\";\n    mysql>flush privileges;\n\n5.字符集相关操作\n----------\nmysql>show database;\n|**查看所有数据库：**show databases ;            \n|**创建数据库：**create database 数据库名；    \n|**创建指定字符集数据库：**\tcreate database test2 default character set utf8       \n|**查看指定数据库使用字符集：**show create database 数据库名；      \n|**删除数据库：**drop database 数据库名;    \n|**查看数据关于字符集的默认配置：** show variables like 'character%';\n|**修改字符集的方法（结合上一句）：**\n\n    SET character_set_client = utf8 ;\n    SET character_set_connection = utf8 ; \n    SET character_set_results = utf8 ; \n    SET character_set_server = utf8 ; \n    SET collation_connection = utf8 ; \n    SET collation_database = utf8 ; \n    SET collation_server = utf8 ; ","source":"_posts/mysql使用记录总结.md","raw":"title: MySql用户及字符集操作\ndate: 2015-08-07 17:47:50\ntags: [mysql]\n---\nMySql中添加用户,新建数据库,用户授权,删除用户,修改密码(注意每行后边都跟个;表示一个命令语句结束):\n\n1.新建用户\n----------\n登录MYSQL：\n\n    cmd>mysql -u root -p\n    cmd>密码\n创建用户：\n\n    mysql> insert into mysql.user(Host,User,Password) values(\"localhost\",\"test\",password(\"1234\"));\n这样就创建了一个名为：test 密码为：1234 的用户。\n注意：此处的\"localhost\"，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将\"localhost\"改为\"%\"，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。\n然后登录一下：\n    \n    mysql>exit;\n    cmd>mysql -u test -p\n    cmd>输入密码\n    mysql>登录成功\n\n2.为用户授权\n----------\n授权格式：\n\n    grant 权限 on 数据库.* to 用户名@登录主机 identified by \"密码\";　\n登录MYSQL（有ROOT权限），这里以ROOT身份登录：\n\n    cmd>mysql -u root -p\n    cmd>密码\n\n首先为用户创建一个数据库(testDB)：\n\n    mysql>create database testDB;\n\n授权test用户拥有testDB数据库的所有权限（某个数据库的所有权限）：\n\n\tmysql>grant all privileges on testDB.* to test@localhost identified by '1234';\n\tmysql>flush privileges;  刷新系统权限表\n    格式：grant 权限 on 数据库.* to 用户名@登录主机 identified by \"密码\";　\n\n如果想指定部分权限给一用户，可以这样来写:\n\n    mysql>grant select,update on testDB.* to test@localhost identified by '1234';\n　　mysql>flush privileges; 刷新系统权限表\n\n授权test用户拥有所有数据库的某些权限： \n\n    mysql>grant select,delete,update,create,drop on *.* to test@\"%\" identified by \"1234\";\n    //test用户对所有数据库都有select,delete,update,create,drop 权限。\n    //@\"%\" 表示对所有非本地主机授权，不包括localhost。（localhost地址设为127.0.0.1，如果设为真实的本地地址，不知道是否可以，没有验证。）\n//对localhost授权：加上一句\n\n    grant all privileges on testDB.* to test@localhost identified by '1234';即可。\n\n3.删除用户\n----------\n\n    cmd>mysql -u root -p\n    cmd>密码\n    mysql>Delete FROM user Where User='test' and Host='localhost';\n    mysql>flush privileges;\n    mysql>drop database testDB; //删除用户的数据库\n\n删除账户及权限：\n\n    >drop user 用户名@'%';\n    >drop user 用户名@ localhost; \n\n4.修改指定用户密码\n----------\n    cmd>mysql -u root -p\n    cmd>密码\n    mysql>update mysql.user set password=password('新密码') where User=\"test\" and Host=\"localhost\";\n    mysql>flush privileges;\n\n5.字符集相关操作\n----------\nmysql>show database;\n|**查看所有数据库：**show databases ;            \n|**创建数据库：**create database 数据库名；    \n|**创建指定字符集数据库：**\tcreate database test2 default character set utf8       \n|**查看指定数据库使用字符集：**show create database 数据库名；      \n|**删除数据库：**drop database 数据库名;    \n|**查看数据关于字符集的默认配置：** show variables like 'character%';\n|**修改字符集的方法（结合上一句）：**\n\n    SET character_set_client = utf8 ;\n    SET character_set_connection = utf8 ; \n    SET character_set_results = utf8 ; \n    SET character_set_server = utf8 ; \n    SET collation_connection = utf8 ; \n    SET collation_database = utf8 ; \n    SET collation_server = utf8 ; ","slug":"mysql使用记录总结","published":1,"updated":"2015-08-10T03:27:58.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71jb000d9wqyo7j43j5n"},{"title":"loadrunner问题记录","date":"2015-08-10T05:54:01.000Z","_content":"1.简介\n----------\n\tHTML-Based是在web测试脚本录制过程中默认选项。它基于界面，将属于一个界面的所有请求放在一个一个Web-url中。\n\tURL-Based在web测试脚本的录制过程，将每一个http请求放在一个Web-url中可读性较差。\n\n2HTML-Base&URL-Based二者对比\n----------\n|编号|`HTML_Based` |  `URL_Based`|\n|:--:|--|--|\n|阅读性|HTML为用户的每一个动作产生单独的步骤，脚本录制结果简洁直接，可阅读性强|将每一个url请求放入web-url中，能更好的控制业务过程|\n|选择|基于浏览器的应用选择此项|不是基于浏览器的应用/基于浏览器的应用中的脚本语言/javascript Applets向服务器发出了请求/使用了https协议|\n\n注：录制过程不要使用浏览器的后退功能loadrunner对其支持不是很好。\n\n\n\n","source":"_posts/loadrunner问题记录.md","raw":"title: loadrunner问题记录\ndate: 2015-08-10 13:54:01\ntags: [LoadRuner]\n---\n1.简介\n----------\n\tHTML-Based是在web测试脚本录制过程中默认选项。它基于界面，将属于一个界面的所有请求放在一个一个Web-url中。\n\tURL-Based在web测试脚本的录制过程，将每一个http请求放在一个Web-url中可读性较差。\n\n2HTML-Base&URL-Based二者对比\n----------\n|编号|`HTML_Based` |  `URL_Based`|\n|:--:|--|--|\n|阅读性|HTML为用户的每一个动作产生单独的步骤，脚本录制结果简洁直接，可阅读性强|将每一个url请求放入web-url中，能更好的控制业务过程|\n|选择|基于浏览器的应用选择此项|不是基于浏览器的应用/基于浏览器的应用中的脚本语言/javascript Applets向服务器发出了请求/使用了https协议|\n\n注：录制过程不要使用浏览器的后退功能loadrunner对其支持不是很好。\n\n\n\n","slug":"loadrunner问题记录","published":1,"updated":"2015-08-10T05:54:24.405Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71je000g9wqyqal5bohk"},{"title":"SqlMap命令-全","date":"2015-08-10T03:29:18.000Z","_content":"\nOptions（选项）\n-----------\n\n|参数|说明|\n|---|---|\n|`--version`      |       显示程序的版本号并退出 |\n|`-h, --help`     |        显示此帮助消息并退出 |\n|`-v VERBOSE`     |     详细级别：0-6（默认为1） |\n \n\nTarget（目标）\n----------\n\n    以下至少需要设置其中一个选项，设置目标URL。 \n|参数|说明|\n|---|---|\n| `-d DIRECT`       |    直接连接到数据库。 |\n|    `-u URL, --url=URL`  | 目标URL。 |\n |   `-l LIST`            | 从Burp或WebScarab代理的日志中解析目标。 |\n |   `-r REQUESTFILE`     | 从一个文件中载入HTTP请求。 |\n    |`-g GOOGLEDORK`      | 处理Google dork的结果作为目标|URL。 \n    |`-c CONFIGFILE`     |  从INI配置文件中加载选项。 |\n \n \n\nRequest（请求）\n-----------\n\n    这些选项可以用来指定如何连接到目标URL。 \n|参数|说明|\n|---|---| \n|`--data=DATA`         |通过POST发送的数据字符串 |\n|`--cookie=COOKIE`    | HTTP Cookie头 |\n  |  `--cookie-urlencode`  |URL 编码生成的cookie注入 |\n   | `--drop-set-cookie`   |忽略响应的Set - Cookie头信息 |\n   | `--user-agent=AGENT` | 指定  HTTP User - Agent头 |\n  |  `--random-agent`     | 使用随机选定的HTTP User - Agent头 |\n   | `--referer=REFERER`  | 指定  HTTP Referer头| \n   | `--headers=HEADERS`  | 换行分开，加入其他的HTTP头 |\n  |  `--auth-type=ATYPE`  | HTTP身份验证类型（基本，摘要或NTLM）(Basic, Digest or NTLM) |\n    |`--auth-cred=ACRED`   |HTTP身份验证凭据（用户名:密码） \n   | `--auth-cert=ACERT`  | HTTP认证证书（key_file，cert_file） |\n   | `--proxy=PROXY`      | 使用HTTP代理连接到目标URL  `--proxy http://127.0.0.1:8888`|\n  |  `--proxy-cred=PCRED`  |HTTP代理身份验证凭据（用户名：密码） |\n   | `--ignore-proxy`   |   忽略系统默认的HTTP代理 |\n   | `--delay=DELAY`     |  在每个HTTP请求之间的延迟时间，单位为秒  `--delay 0.5`|\n    |`--timeout=TIMEOUT`  | 等待连接超时的时间（默认为30秒）| \n  |  `--retries=RETRIES`  | 连接超时后重新连接的时间（默认3） |\n  |  `--scope=SCOPE`       |从所提供的代理日志中过滤器目标的正则表达式| \n   | `--safe-url=SAFURL`  | 在测试过程中经常访问的url地址 |\n|`--safe-freq=SAFREQ`  |两次访问之间测试请求，给出安全的URL |\n \n \n \n\nOptimization（优化）\n----------------\n\n    这些选项可用于优化SqlMap的性能。\n|参数|说明|\n|---|---|   \n|    `-o`                |  开启所有优化开关 |\n |   `--predict-output`   | 预测常见的查询输出 |\n |   `--keep-alive`        |使用持久的HTTP（S）连接 |\n |   `--null-connection`   |从没有实际的HTTP响应体中检索页面长度 |\n |   `--threads=THREADS`  | 最大的HTTP（S）请求并发量（默认为1） |\n \n\nInjection（注入）\n-------------\n\n    这些选项可以用来指定测试哪些参数，  提供自定义的注入payloads和可选篡改脚本。 \n|参数|说明|\n|---|---|  \n| `-p TESTPARAMETER`   | 可测试的参数（S） | \n |   `--dbms=DBMS`         |强制后端的DBMS为此值 如：--dbms \"Mysql\"| \n |   `--os=OS`            | 强制后端的DBMS操作系统为这个值 | \n  |  `--prefix=PREFIX`    | 注入payload字符串前缀 | \n  |  `--suffix=SUFFIX`    | 注入payload字符串后缀 | \n  |  `--tamper=TAMPER`    | 使用给定的脚本（S）篡改注入数据 | \n \n \n\nDetection（检测）\n-------------\n\n    这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容。 \n |参数|说明|\n|---|---| \n|    `--level=LEVEL`     |   执行测试的等级（1-5，默认为1）|  \n |    `--risk=RISK`        |  执行测试的风险（0-3，默认为1）|  \n  |   `--string=STRING`    |  查询时有效时在页面匹配字符串 | \n |    `--regexp=REGEXP`    |  查询时有效时在页面匹配正则表达式|  \n |    `--text-only`        |  仅基于在文本内容比较网页 | \n \n  Techniques（技巧）： \n\n    这些选项可用于调整具体的SQL注入测试。 \n |参数|说明|\n|---|---| \n|    `--technique=TECH`   |  SQL注入技术测试（默认BEUST） | \n|     `--time-sec=TIMESEC`  | DBMS响应的延迟时间（默认为5秒） | \n|     `--union-cols=UCOLS`  | 定列范围用于测试UNION查询注入 | \n|     `--union-char=UCHAR`  | 用于暴力猜解列数的字符 | \n \n \n\nFingerprint（指纹）\n---------------\n\n |参数|说明|\n|---|---| \n|    `-f, --fingerprint`    |  执行检查广泛的DBMS版本指纹 | \n \n\nEnumeration（枚举）\n---------------\n\n    这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的SQL语句。\n|参数|说明|\n|---|---|  \n|    `-b, --banner`    |     检索数据库管理系统的标识 | \n|     `--current-user`   |    检索数据库管理系统当前用户 | \n|   `--current-db`   |      检索数据库管理系统当前数据库 | \n| `--is-dba`            | 检测DBMS当前用户是否DBA | \n|     `--users`        |      枚举数据库管理系统用户 \n| `--passwords`        |  枚举数据库管理系统用户密码哈希 \n| `--privileges`       |  枚举数据库管理系统用户的权限 \n | `--roles`           |   枚举数据库管理系统用户的角色 \n| `--dbs`              |  枚举数据库管理系统数据库 \n| `--tables`           |  枚举的DBMS数据库中的表 \n| `--columns`          |  枚举DBMS数据库表列 \n| `--dump`             |  转储数据库管理系统的数据库中的表项 \n| `--dump-all`         |  转储所有的DBMS数据库表中的条目 \n| `--search`           |  搜索列（S），表（S）和/或数据库名称（S） \n| `-D DB`              |  要进行枚举的数据库名 \n| `-T TBL`             |  要进行枚举的数据库表 \n| `-C COL`             |  要进行枚举的数据库列 \n| `-U USER`            |  用来进行枚举的数据库用户 \n| `--exclude-sysdbs`   |  枚举表时排除系统数据库 \n| `--start=LIMITSTART` |  第一个查询输出进入检索 \n| `--stop=LIMITSTOP`   |  最后查询的输出进入检索 \n| `--first=FIRSTCHAR`  |  第一个查询输出字的字符检索 \n| `--last=LASTCHAR`    |  最后查询的输出字字符检索 \n| `--sql-query=QUERY`  |  要执行的SQL语句 \n| `--sql-shell`         | 提示交互式SQL的shell \n \n  \n\nBrute force（蛮力）\n---------------\n\n    这些选项可以被用来运行蛮力检查。 \n |参数|说明|\n|---|---| \n|    `--common-tables`   |   检查存在共同表 | \n  |   `--common-columns`   |  检查存在共同列 | \n \n  User-defined function injection（用户自定义函数注入）：\n\n    这些选项可以用来创建用户自定义函数。 \n|参数|说明|\n|---|---|  \n|    `--udf-inject`   |      注入用户自定义函数 | \n|   `--shared-lib=SHLIB` |  共享库的本地路径 | \n \n \n\nFile system access（访问文件系统）\n--------------------------\n\n    这些选项可以被用来访问后端数据库管理系统的底层文件系统。 \n|参数|说明|\n|---|---|  \n |   `--file-read=RFILE`  |  从后端的数据库管理系统文件系统读取文件 | \n  |   `--file-write=WFILE`  | 编辑后端的数据库管理系统文件系统上的本地文件 | \n  |   `--file-dest=DFILE` |   后端的数据库管理系统写入文件的绝对路径 | \n \n  \n\nOperating system access（操作系统访问）\n-------------------------------\n\n    这些选项可以用于访问后端数据库管理系统的底层操作系统。 \n |参数|说明|\n|---|---| \n|    `--os-cmd=OSCMD`     |  执行操作系统命令 \n|     `--os-shell`         |  交互式的操作系统的shell \n |    `--os-pwn`           |  获取一个OOB shell，meterpreter或VNC \n |    `--os-smbrelay`      |  一键获取一个OOB shell，meterpreter或VNC \n|     `--os-bof`            | 存储过程缓冲区溢出利用 \n  |   `--priv-esc`         |  数据库进程用户权限提升 \n  |   `--msf-path=MSFPATH` |  Metasploit Framework本地的安装路径 \n   |  `--tmp-path=TMPPATH`  | 远程临时文件目录的绝对路径 \n \n \n\nWindows注册表访问\n------------\n\n    这些选项可以被用来访问后端数据库管理系统Windows注册表。 \n |参数|说明|\n|---|---| \n|    `--reg-read`          | 读一个Windows注册表项值 | \n  |   `--reg-add`           | 写一个Windows注册表项值数据 | \n|     `--reg-del`          |  删除Windows注册表键值 | \n  |   `--reg-key=REGKEY`   |  Windows注册表键 | \n |    `--reg-value=REGVAL` |  Windows注册表项值 | \n  |   `--reg-data=REGDATA` |  Windows注册表键值数据 | \n  |   `--reg-type=REGTYPE` |  Windows注册表项值类型 | \n \n\nGeneral（一般）\n-----------\n \n    这些选项可以用来设置一些一般的工作参数。 \n|参数|说明|\n|---|---| \n|    `-t TRAFFICFILE`   |    记录所有HTTP流量到一个文本文件中 \n|     `-s SESSIONFILE`    |   保存和恢复检索会话文件的所有数据 \n|     `--flush-session`    |  刷新当前目标的会话文件 \n  |   `--fresh-queries`    |  忽略在会话文件中存储的查询结果 \n|     `--eta`               | 显示每个输出的预计到达时间 \n|     `--update`           |  更新SqlMap \n|     `--save`             |  file保存选项到INI配置文件 \n|     `--batch`            |  从不询问用户输入，使用所有默认配置。 \n \n\nMiscellaneous（杂项）\n-----------------\n\n  |参数|说明|\n|---|---| \n|    `--beep`              |发现SQL注入时提醒 |\n |    `--check-payload`    |  IDS对注入payloads的检测测试 | \n |    `--cleanup`          |  SqlMap具体的UDF和表清理DBMS | \n |    `--forms`            |  对目标URL的解析和测试形式 | \n|     `--gpage=GOOGLEPAGE` |  从指定的页码使用谷歌dork结果|  \n|     `--page-rank`        |  Google dork结果显示网页排名（PR） | \n |    `--parse-errors`     |  从响应页面解析数据库管理系统的错误消息 | \n |    `--replicate`         | 复制转储的数据到一个sqlite3数据库 | \n |    `--tor`               | 使用默认的Tor（Vidalia/ Privoxy/ Polipo）代理地址 | \n  |   `--wizard`            | 给初级用户的简单向导界面| \n","source":"_posts/SqlMap命令-全.md","raw":"title: SqlMap命令-全\ndate: 2015-08-10 11:29:18\ntags: [SQLMAP]\n---\n\nOptions（选项）\n-----------\n\n|参数|说明|\n|---|---|\n|`--version`      |       显示程序的版本号并退出 |\n|`-h, --help`     |        显示此帮助消息并退出 |\n|`-v VERBOSE`     |     详细级别：0-6（默认为1） |\n \n\nTarget（目标）\n----------\n\n    以下至少需要设置其中一个选项，设置目标URL。 \n|参数|说明|\n|---|---|\n| `-d DIRECT`       |    直接连接到数据库。 |\n|    `-u URL, --url=URL`  | 目标URL。 |\n |   `-l LIST`            | 从Burp或WebScarab代理的日志中解析目标。 |\n |   `-r REQUESTFILE`     | 从一个文件中载入HTTP请求。 |\n    |`-g GOOGLEDORK`      | 处理Google dork的结果作为目标|URL。 \n    |`-c CONFIGFILE`     |  从INI配置文件中加载选项。 |\n \n \n\nRequest（请求）\n-----------\n\n    这些选项可以用来指定如何连接到目标URL。 \n|参数|说明|\n|---|---| \n|`--data=DATA`         |通过POST发送的数据字符串 |\n|`--cookie=COOKIE`    | HTTP Cookie头 |\n  |  `--cookie-urlencode`  |URL 编码生成的cookie注入 |\n   | `--drop-set-cookie`   |忽略响应的Set - Cookie头信息 |\n   | `--user-agent=AGENT` | 指定  HTTP User - Agent头 |\n  |  `--random-agent`     | 使用随机选定的HTTP User - Agent头 |\n   | `--referer=REFERER`  | 指定  HTTP Referer头| \n   | `--headers=HEADERS`  | 换行分开，加入其他的HTTP头 |\n  |  `--auth-type=ATYPE`  | HTTP身份验证类型（基本，摘要或NTLM）(Basic, Digest or NTLM) |\n    |`--auth-cred=ACRED`   |HTTP身份验证凭据（用户名:密码） \n   | `--auth-cert=ACERT`  | HTTP认证证书（key_file，cert_file） |\n   | `--proxy=PROXY`      | 使用HTTP代理连接到目标URL  `--proxy http://127.0.0.1:8888`|\n  |  `--proxy-cred=PCRED`  |HTTP代理身份验证凭据（用户名：密码） |\n   | `--ignore-proxy`   |   忽略系统默认的HTTP代理 |\n   | `--delay=DELAY`     |  在每个HTTP请求之间的延迟时间，单位为秒  `--delay 0.5`|\n    |`--timeout=TIMEOUT`  | 等待连接超时的时间（默认为30秒）| \n  |  `--retries=RETRIES`  | 连接超时后重新连接的时间（默认3） |\n  |  `--scope=SCOPE`       |从所提供的代理日志中过滤器目标的正则表达式| \n   | `--safe-url=SAFURL`  | 在测试过程中经常访问的url地址 |\n|`--safe-freq=SAFREQ`  |两次访问之间测试请求，给出安全的URL |\n \n \n \n\nOptimization（优化）\n----------------\n\n    这些选项可用于优化SqlMap的性能。\n|参数|说明|\n|---|---|   \n|    `-o`                |  开启所有优化开关 |\n |   `--predict-output`   | 预测常见的查询输出 |\n |   `--keep-alive`        |使用持久的HTTP（S）连接 |\n |   `--null-connection`   |从没有实际的HTTP响应体中检索页面长度 |\n |   `--threads=THREADS`  | 最大的HTTP（S）请求并发量（默认为1） |\n \n\nInjection（注入）\n-------------\n\n    这些选项可以用来指定测试哪些参数，  提供自定义的注入payloads和可选篡改脚本。 \n|参数|说明|\n|---|---|  \n| `-p TESTPARAMETER`   | 可测试的参数（S） | \n |   `--dbms=DBMS`         |强制后端的DBMS为此值 如：--dbms \"Mysql\"| \n |   `--os=OS`            | 强制后端的DBMS操作系统为这个值 | \n  |  `--prefix=PREFIX`    | 注入payload字符串前缀 | \n  |  `--suffix=SUFFIX`    | 注入payload字符串后缀 | \n  |  `--tamper=TAMPER`    | 使用给定的脚本（S）篡改注入数据 | \n \n \n\nDetection（检测）\n-------------\n\n    这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容。 \n |参数|说明|\n|---|---| \n|    `--level=LEVEL`     |   执行测试的等级（1-5，默认为1）|  \n |    `--risk=RISK`        |  执行测试的风险（0-3，默认为1）|  \n  |   `--string=STRING`    |  查询时有效时在页面匹配字符串 | \n |    `--regexp=REGEXP`    |  查询时有效时在页面匹配正则表达式|  \n |    `--text-only`        |  仅基于在文本内容比较网页 | \n \n  Techniques（技巧）： \n\n    这些选项可用于调整具体的SQL注入测试。 \n |参数|说明|\n|---|---| \n|    `--technique=TECH`   |  SQL注入技术测试（默认BEUST） | \n|     `--time-sec=TIMESEC`  | DBMS响应的延迟时间（默认为5秒） | \n|     `--union-cols=UCOLS`  | 定列范围用于测试UNION查询注入 | \n|     `--union-char=UCHAR`  | 用于暴力猜解列数的字符 | \n \n \n\nFingerprint（指纹）\n---------------\n\n |参数|说明|\n|---|---| \n|    `-f, --fingerprint`    |  执行检查广泛的DBMS版本指纹 | \n \n\nEnumeration（枚举）\n---------------\n\n    这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据。此外，您还可以运行您自己的SQL语句。\n|参数|说明|\n|---|---|  \n|    `-b, --banner`    |     检索数据库管理系统的标识 | \n|     `--current-user`   |    检索数据库管理系统当前用户 | \n|   `--current-db`   |      检索数据库管理系统当前数据库 | \n| `--is-dba`            | 检测DBMS当前用户是否DBA | \n|     `--users`        |      枚举数据库管理系统用户 \n| `--passwords`        |  枚举数据库管理系统用户密码哈希 \n| `--privileges`       |  枚举数据库管理系统用户的权限 \n | `--roles`           |   枚举数据库管理系统用户的角色 \n| `--dbs`              |  枚举数据库管理系统数据库 \n| `--tables`           |  枚举的DBMS数据库中的表 \n| `--columns`          |  枚举DBMS数据库表列 \n| `--dump`             |  转储数据库管理系统的数据库中的表项 \n| `--dump-all`         |  转储所有的DBMS数据库表中的条目 \n| `--search`           |  搜索列（S），表（S）和/或数据库名称（S） \n| `-D DB`              |  要进行枚举的数据库名 \n| `-T TBL`             |  要进行枚举的数据库表 \n| `-C COL`             |  要进行枚举的数据库列 \n| `-U USER`            |  用来进行枚举的数据库用户 \n| `--exclude-sysdbs`   |  枚举表时排除系统数据库 \n| `--start=LIMITSTART` |  第一个查询输出进入检索 \n| `--stop=LIMITSTOP`   |  最后查询的输出进入检索 \n| `--first=FIRSTCHAR`  |  第一个查询输出字的字符检索 \n| `--last=LASTCHAR`    |  最后查询的输出字字符检索 \n| `--sql-query=QUERY`  |  要执行的SQL语句 \n| `--sql-shell`         | 提示交互式SQL的shell \n \n  \n\nBrute force（蛮力）\n---------------\n\n    这些选项可以被用来运行蛮力检查。 \n |参数|说明|\n|---|---| \n|    `--common-tables`   |   检查存在共同表 | \n  |   `--common-columns`   |  检查存在共同列 | \n \n  User-defined function injection（用户自定义函数注入）：\n\n    这些选项可以用来创建用户自定义函数。 \n|参数|说明|\n|---|---|  \n|    `--udf-inject`   |      注入用户自定义函数 | \n|   `--shared-lib=SHLIB` |  共享库的本地路径 | \n \n \n\nFile system access（访问文件系统）\n--------------------------\n\n    这些选项可以被用来访问后端数据库管理系统的底层文件系统。 \n|参数|说明|\n|---|---|  \n |   `--file-read=RFILE`  |  从后端的数据库管理系统文件系统读取文件 | \n  |   `--file-write=WFILE`  | 编辑后端的数据库管理系统文件系统上的本地文件 | \n  |   `--file-dest=DFILE` |   后端的数据库管理系统写入文件的绝对路径 | \n \n  \n\nOperating system access（操作系统访问）\n-------------------------------\n\n    这些选项可以用于访问后端数据库管理系统的底层操作系统。 \n |参数|说明|\n|---|---| \n|    `--os-cmd=OSCMD`     |  执行操作系统命令 \n|     `--os-shell`         |  交互式的操作系统的shell \n |    `--os-pwn`           |  获取一个OOB shell，meterpreter或VNC \n |    `--os-smbrelay`      |  一键获取一个OOB shell，meterpreter或VNC \n|     `--os-bof`            | 存储过程缓冲区溢出利用 \n  |   `--priv-esc`         |  数据库进程用户权限提升 \n  |   `--msf-path=MSFPATH` |  Metasploit Framework本地的安装路径 \n   |  `--tmp-path=TMPPATH`  | 远程临时文件目录的绝对路径 \n \n \n\nWindows注册表访问\n------------\n\n    这些选项可以被用来访问后端数据库管理系统Windows注册表。 \n |参数|说明|\n|---|---| \n|    `--reg-read`          | 读一个Windows注册表项值 | \n  |   `--reg-add`           | 写一个Windows注册表项值数据 | \n|     `--reg-del`          |  删除Windows注册表键值 | \n  |   `--reg-key=REGKEY`   |  Windows注册表键 | \n |    `--reg-value=REGVAL` |  Windows注册表项值 | \n  |   `--reg-data=REGDATA` |  Windows注册表键值数据 | \n  |   `--reg-type=REGTYPE` |  Windows注册表项值类型 | \n \n\nGeneral（一般）\n-----------\n \n    这些选项可以用来设置一些一般的工作参数。 \n|参数|说明|\n|---|---| \n|    `-t TRAFFICFILE`   |    记录所有HTTP流量到一个文本文件中 \n|     `-s SESSIONFILE`    |   保存和恢复检索会话文件的所有数据 \n|     `--flush-session`    |  刷新当前目标的会话文件 \n  |   `--fresh-queries`    |  忽略在会话文件中存储的查询结果 \n|     `--eta`               | 显示每个输出的预计到达时间 \n|     `--update`           |  更新SqlMap \n|     `--save`             |  file保存选项到INI配置文件 \n|     `--batch`            |  从不询问用户输入，使用所有默认配置。 \n \n\nMiscellaneous（杂项）\n-----------------\n\n  |参数|说明|\n|---|---| \n|    `--beep`              |发现SQL注入时提醒 |\n |    `--check-payload`    |  IDS对注入payloads的检测测试 | \n |    `--cleanup`          |  SqlMap具体的UDF和表清理DBMS | \n |    `--forms`            |  对目标URL的解析和测试形式 | \n|     `--gpage=GOOGLEPAGE` |  从指定的页码使用谷歌dork结果|  \n|     `--page-rank`        |  Google dork结果显示网页排名（PR） | \n |    `--parse-errors`     |  从响应页面解析数据库管理系统的错误消息 | \n |    `--replicate`         | 复制转储的数据到一个sqlite3数据库 | \n |    `--tor`               | 使用默认的Tor（Vidalia/ Privoxy/ Polipo）代理地址 | \n  |   `--wizard`            | 给初级用户的简单向导界面| \n","slug":"SqlMap命令-全","published":1,"updated":"2015-08-10T03:50:07.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cid5q71ji000j9wqy369f5jzp"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cid5q71h200009wqyy9p2n1dn","tag_id":"cid5q71hb00019wqyux8d0ce2","_id":"cid5q71he00029wqys736146u"},{"post_id":"cid5q71iw00039wqysduae7lr","tag_id":"cid5q71iy00049wqye57njmwl","_id":"cid5q71iz00059wqyy3ae8lz9"},{"post_id":"cid5q71j200069wqytszsrq21","tag_id":"cid5q71j300079wqy6wnlv7o2","_id":"cid5q71j300089wqy3q9ygele"},{"post_id":"cid5q71j500099wqy3pt4ndf9","tag_id":"cid5q71j6000a9wqypdj8g5r3","_id":"cid5q71j7000b9wqymx2p7p91"},{"post_id":"cid5q71jb000d9wqyo7j43j5n","tag_id":"cid5q71jc000e9wqy0w8iid9x","_id":"cid5q71jc000f9wqyliofibpt"},{"post_id":"cid5q71je000g9wqyqal5bohk","tag_id":"cid5q71jg000h9wqyu2g72kwd","_id":"cid5q71jg000i9wqyv9m1e7po"},{"post_id":"cid5q71ji000j9wqy369f5jzp","tag_id":"cid5q71jl000k9wqyrq6tyepr","_id":"cid5q71jm000l9wqygmt21wdl"}],"Tag":[{"name":"Git","_id":"cid5q71hb00019wqyux8d0ce2"},{"name":"findpassword","_id":"cid5q71iy00049wqye57njmwl"},{"name":"XSS","_id":"cid5q71j300079wqy6wnlv7o2"},{"name":"django","_id":"cid5q71j6000a9wqypdj8g5r3"},{"name":"mysql","_id":"cid5q71jc000e9wqy0w8iid9x"},{"name":"LoadRuner","_id":"cid5q71jg000h9wqyu2g72kwd"},{"name":"SQLMAP","_id":"cid5q71jl000k9wqyrq6tyepr"}]}}